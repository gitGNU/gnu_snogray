Building Snogray


COMPILATION

   Snogray uses the GNU autotools.  To build it, one must first run
   the "configure" shell script; this produces a "Makefile", which
   allows one to compile snogray by running the "make" program.  If
   there are missing dependencies, the configure script will given an
   error.

   [If this is a development snapshot, there may not be a "configure"
   script.  In such a case the "autogen.sh" script may be run to
   produce the configure script; however, this requires that the GNU
   autotools be installed.]

   Build steps (these commands should be given to a command-line prompt):

   (0) OPTIONAL:  if there is no "configure" script, generate
       "configure" by running autogen.sh:

	  ./autogen.sh

   (1) Run the "configure" script to generate a Makefile:

	  ./configure

   (2) Use make to build snogray:

	  make


DEPENDENCIES

   In step (1) above, the configure script will try to examine your
   system to see what libraries, etc, are available.  There are very
   few libraries which are actually _necessary_ to compile snogray,
   but many are desirable -- e.g., libjpeg (for JPEG format image
   handling), libpng (for PNG format image handling) OpenEXR (for EXR
   format HDR image handling), etc.

   Snogray requires Lua (the language), but source-code for a Lua
   implementation should be bundled with the snogray distribution (in
   the subdirectory "lua"), so no external library is required
   (although if an external library is present on the system, the
   snogray configuration step will attempt to use it).

   The snogray Lua-C++ interface is automatically generated using the
   "SWIG" interface generator.  A pre-generated interface should be
   included with the distribution, so SWIG doesn't actually need to be
   installed for normal compilation.  However, for those doing
   development, SWIG is required if the Lua-C++ interface is changed.

   [For development snapshots, source code for Lua and pre-generated
   SWIG interface files may not be present.]
